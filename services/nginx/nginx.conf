
user  root;

#启动进程,通常设置成和cpu的数量相等
worker_processes  auto;

#配置Nginx worker进程最大打开文件数
worker_rlimit_nofile 65535;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

#全局错误日志及PID文件
pid /run/nginx/nginx.pid;
error_log /var/log/nginx/error.log warn;

# Includes files with directives to load dynamic modules.
include /etc/nginx/modules/*.conf;

#工作模式及连接数上限
events {
    #epoll是多路复用IO(I/O Multiplexing)中的一种方式,
    #仅用于linux2.6以上内核,可以大大提高nginx的性能
    use epoll;
    #单个后台worker process进程的最大并发链接数
    worker_connections  51200;
}

http {
    #设定mime类型,类型由mime.type文件定义
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 隐藏版本号
    server_tokens off;

    # Specifies the maximum accepted body size of a client request, as
    # indicated by the request header Content-Length. If the stated content
    # length is greater than this size, then the client receives the HTTP
    # error code 413. Set to 0 to disable. Default is '1m'.
    client_max_body_size 0;

    #sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，
    #对于普通应用，必须设为 on,
    #如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，
    #以平衡磁盘与网络I/O处理速度，降低系统的uptime.
    sendfile        on;

    # Causes nginx to attempt to send its HTTP response head in one packet,
    # instead of using partial frames. Default is 'off'.
    #tcp_nopush on;

    # Enables the specified protocols. Default is TLSv1 TLSv1.1 TLSv1.2.
    # TIP: If you're not obligated to support ancient clients, remove TLSv1.1.
    ssl_protocols TLSv1.2 TLSv1.3;

    # Enables a shared SSL cache with size that can hold around 8000 sessions.
    # Default is 'none'.
    ssl_session_cache shared:SSL:2m;

    # Specifies a time during which a client may reuse the session parameters.
    # Default is '5m'.
    ssl_session_timeout 1h;

    # Disable TLS session tickets (they are insecure). Default is 'on'.
    ssl_session_tickets off;

    #设定日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    			'$status $body_bytes_sent "$http_referer" '
    			'"$http_user_agent" "$http_x_forwarded_for"';

    # Sets the path, format, and configuration for a buffered log write.
    access_log /var/log/nginx/access.log main;

    #map指令的作用：
    #根据客户端请求中$http_upgrade 的值，来构造改变$connection_upgrade的值
    #即根据变量$http_upgrade的值创建新的变量$connection_upgrade，
    #创建的规则就是{}里面的东西。其中的规则没有做匹配，因此使用默认的.
    #即 $connection_upgrade 的值会一直是 upgrade。然后如果 $http_upgrade为空字符串的话，
    #那值会是 close。
    #进行特殊的配置才能支持websocket
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # Includes virtual hosts configs.
	include /etc/nginx/http.d/*-.conf;
}

# TIP: Uncomment if you use stream module.
#include /etc/nginx/stream.conf;
stream {
	# Specifies the main log format.
	log_format main '$remote_addr [$time_local] '
			'$protocol $status $bytes_sent $bytes_received '
			'$session_time "$upstream_addr" '
			'"$upstream_bytes_sent" "$upstream_bytes_received" "$upstream_connect_time"';

	access_log /var/log/nginx/stream.log main;

    # 自定义stream模块配置
    include /etc/nginx/http.d/*=.conf;
}
