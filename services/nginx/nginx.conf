
user  nginx;

#启动进程,通常设置成和cpu的数量相等
worker_processes  auto;

#配置Nginx worker进程最大打开文件数
worker_rlimit_nofile 65535;

#全局错误日志及PID文件
pid        /var/run/nginx.pid;
error_log  /var/log/nginx/nginx.error.log warn;

#工作模式及连接数上限
events {
    #epoll是多路复用IO(I/O Multiplexing)中的一种方式,
    #仅用于linux2.6以上内核,可以大大提高nginx的性能
    use epoll;
    #单个后台worker process进程的最大并发链接数
    worker_connections  51200;
}

http {
    #设定mime类型,类型由mime.type文件定义
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    #设定日志格式
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /dev/null;
    #access_log  /var/log/dnmp/nginx.access.log  main;

    # 隐藏版本号
    server_tokens  off;
    #sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，
    #对于普通应用，必须设为 on,
    #如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，
    #以平衡磁盘与网络I/O处理速度，降低系统的uptime.
    sendfile        on;
    #tcp_nopush     on;

    #连接超时时间
    keepalive_timeout  60;

    #map指令的作用：
    #根据客户端请求中$http_upgrade 的值，来构造改变$connection_upgrade的值
    #即根据变量$http_upgrade的值创建新的变量$connection_upgrade，
    #创建的规则就是{}里面的东西。其中的规则没有做匹配，因此使用默认的.
    #即 $connection_upgrade 的值会一直是 upgrade。然后如果 $http_upgrade为空字符串的话，
    #那值会是 close。
    #进行特殊的配置才能支持websocket
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    include /etc/nginx/conf.d/*-.conf;
}
